spring.application.name=Processing Manager
#Configurar a porta como 0 fará com que o SpringBoot inicialize em uma porta randômica
server.port=0
#Configuração do Cluster do Kafka
spring.kafka.bootstrap-servers=localhost:9092,localhost:9093,localhost:9096
############################ Tópicos
topic.processing=processing-topic
topic.activity=activity-topic
topic.activity.partitions=3
#Especifica o numero mínimo de réplicas para confirmar que a operação de gravação foi bem sucedida
topic.activity.min.insync.replicas=2
#Especifica o número mínimo de réplicas para confirmar que a operação de gravação foi bem sucedida
topic.processing.min.insync.replicas=2
#replicas são cópias de um tópico em diferentes brokers
topic.activity.replicas=3
topic.processing.partitions=3
#replicas são cópias de um tópico em diferentes brokers
topic.processing.replicas=3
############################  Group ids
topic.processing.group.id=topic.processing.group
topic.processing.result.group.id=topic.processing.result.group
############################ Producer
batch.size=400
linger.ms=10
#Pode-se usar spring.kafka.producer.retries caso não seja desejado configurar na classe KafkaProducerConfig
producer.retries=10
#Tempo entre retries - Pode-se usar spring.kafka.producer.properties.retry.backoff.ms caso não seja desejado configurar na classe KafkaProducerConfig
producer.retry.backoff.ms=1000
#Pode-se usar spring.kafka.producer.properties.delivery.timeout.ms caso não seja desejado configurar na classe KafkaProducerConfig
producer.delivery.timeout=6000
#Retorna um ack ao atingir o número de réplicas configuradas em min.insync.replicas
producer.ack=all
############################# Consumer
isolation.level=read_committed
############################# Transaction
spring.kafka.producer.transaction-id-prefix=process-transaction-${random.value}-
logging.level.org.spring.framework.kafka.transaction=TRACE
logging.level.org.spring.framework.transaction=TRACE